syntax = "proto3";
package vison.ast;
option go_package = "ast";


import "github.com/xiaokangwang/VisonC/structure/common/compound.proto";
import "github.com/xiaokangwang/VisonC/structure/common/id.proto";
import "github.com/xiaokangwang/VisonC/structure/common/impl.proto";


message ImpInstruction{
  oneof InstrType{
    DataImplStmt data=1;
    SignalImplStmt signall=2;
    Assign assign=3;
    Join join=4;
  }
}

message DataImplStmt{
  vison.common.KeyedIDList assignee = 1;
  vison.common.NodeID invoke =2;
  vison.common.KeyedIDList input = 3;

}
message SignalImplStmt{
  vison.common.KeyedIDList assignee = 1;
  vison.common.SignaledNodeID invoke =2;
  vison.common.KeyedIDList input = 3;
  repeated vison.common.ID wait =4;
}

message Assign{
  vison.common.ID to=1;
  vison.common.ID from=2;
}

message Join{
  vison.common.ID to=1;
  vison.common.ID from=2;
}

message ImpBlock{
  repeated ImpInstruction ctx =1;
  vison.common.ImplSpec spec=2;
}
